{"version":3,"sources":["webpack:///./src/app/shoppinglist/todo.module.ts","webpack:///./src/app/shoppinglist/todo.page.html","webpack:///./src/app/shoppinglist/todo.page.scss","webpack:///./src/app/shoppinglist/todo.page.ts"],"names":[],"mappings":"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","file":"shoppinglist-todo-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TodoPage } from './todo.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TodoPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TodoPage]\n})\nexport class TodoPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button icon=\\\"arrow-back\\\"></ion-back-button></ion-buttons>\\n    <ion-title>Shopping list</ion-title>\\n    \\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button fill=\\\"clear\\\" slot=\\\"icon-only\\\" (click)=\\\"logout()\\\">\\n        <ion-icon name=\\\"log-out\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <ion-list>\\n    <ion-item-sliding *ngFor=\\\"let todo of todos\\\">\\n      <ion-item>\\n        <ion-label>\\n          <h2>{{todo.data().title}}</h2>\\n          <h3>{{todo.data().description}}</h3>\\n          <p *ngIf=\\\"todo.data().date\\\" [innerHTML]= \\\"getDate(todo.data().date)\\\"></p>\\n        </ion-label>\\n      </ion-item>\\n      <ion-item-options slide=\\\"end\\\">\\n        <ion-item-option color=\\\"danger\\\" (click)=\\\"markDone(todo)\\\">\\n         <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n        </ion-item-option>\\n       </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n  \\n  <!--  floating action button -->\\n  <ion-fab horizontal=\\\"end\\\" vertical=\\\"bottom\\\" slot=\\\"fixed\\\" (click)=\\\"addnewTodo()\\\">\\n    <ion-fab-button color=\\\"danger\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n \\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3BwaW5nbGlzdC90b2RvLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n// navcontroller import\nimport { NavController, ToastController} from '@ionic/angular';\n// retreive documents from firebase\nimport * as firebase from 'firebase' ;\nimport { AngularFirestore } from '@angular/fire/firestore';\n;\n// import { AngularFireAuth } from '@angular/fire/auth'; public afAuth: AngularFireAuth\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.page.html',\n  styleUrls: ['./todo.page.scss'],\n})\nexport class TodoPage implements OnInit {\n  x: string;\n  todotitle: string;\n  tododescription: string;\n  tododate: Date;\n  todoowner: string;\n  tagsts: [];\n  userId: string;\n  todos: any[] = [];\n  eventSource = [];\n  constructor(private navCtrl: NavController, private toastCtrl: ToastController,\n              private db: AngularFirestore)\n {\n    this.userId = firebase.auth().currentUser.uid;\n    this.getTodoData();\n  }\n\n  ngOnInit() {\n  }\n  // to display dtae nicely on the todo list page\n getDate(timestamp: firebase.firestore.Timestamp) {\n   let date = timestamp.toDate();\n   return date.toLocaleDateString();\n\n }\n\n  // get the data displays the data from firebase\n  getTodoData() {\n    firebase.firestore().collection('todos')\n    .where('owner', '==', this.userId)\n    .where('status', '==', 'incomplete')   // only show the tasks that are not marked as completed\n    .onSnapshot((querySnapshot) => {    // using onSnapshot instead of get will show newly added todo as soon as its added\n      this.todos = querySnapshot.docs; // docs will display all the documents that match the owner\n    });\n  }\n addnewTodo() {\n  this.navCtrl.navigateForward(['/add-newtodo']);\n }\n EditRecord(record) {\n  record.isEdit = true;\n  record.EditName = record.Title;\n  record.EditDescription = record.Description;\n  record.EditDate = record.Date;\n}\nupdateDocument(collectionName: string, docID: string, dataObj: any): Promise<any> {\n  return new Promise((resolve, reject) => {\n      this.db\n          .collection(collectionName)\n          .doc(docID)\n          .update(dataObj)\n          .then((obj: any) => {\n              resolve(obj);\n          })\n          .catch((error: any) => {\n              reject(error);\n          });\n  });\n}\ngettodoData2() {\n  firebase.firestore().collection('todos').get().then(\n    (queryDocumentSnapshot) => {\n      console.log(queryDocumentSnapshot.docs);\n      this.todos = queryDocumentSnapshot.docs;\n    })\n\n\n}\neditTodo() {\n  this.navCtrl.navigateForward('/edittodo');\n}\n\n markDone(document: firebase.firestore.QueryDocumentSnapshot) {\n\n  firebase.firestore().collection('todos').doc(document.id).set({\n    status: 'completed'\n  }, {\n    merge: true\n\n  }).then(() => {\n    this.toastCtrl.create({\n      message: 'This item is marked as completed!',\n      duration: 2000\n    }).then((toast) => {\n      toast.present();\n    });\n  });\n\n }\n logout() {\n   firebase.auth().signOut().then(() => {\n\n    console.log('signedout');\n    this.navCtrl.navigateForward('/loggedout');\n\n   // this.navCtrl.navigateRoot('');\n   }).catch((err) => {\n    console.log(err);\n   });\n\n }\n}\n"],"sourceRoot":""}