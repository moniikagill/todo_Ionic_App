{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAWF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAT3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB5B,wkC;;;;;;;;;;;ACAA,+BAA+B,wBAAwB,qBAAqB,8BAA8B,EAAE,aAAa,gBAAgB,uBAAuB,EAAE,+CAA+C,+kB;;;;;;;;;;;;;;;;;;;;ACA/J;AAClD,kBAAkB;AACoB;AACtC,qDAAqD;AACY;AAMjE;IAME,mBAAoB,SAA0B,EAAU,OAAsB;QAA9E,iBAeE;QAfkB,cAAS,GAAT,SAAS,CAAiB;QAAU,YAAO,GAAP,OAAO,CAAe;QAE5E,4DAA4D;QAC5D,wDAAwD;QACvD,6CAAa,EAAE,CAAC,kBAAkB,CAAC,UAAC,IAAI;YACrC,IAAI,IAAI,EAAE;gBACV,6DAA6D;gBAC7D,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC5C,0CAA0C;aACxC;iBAAM;gBACJ,uBAAuB;aAEzB;QAEJ,CAAC,CAAC,CAAC;IACL,CAAC;IAEF,4BAAQ,GAAR;IACA,CAAC;IACH,yBAAK,GAAL;QAAA,iBA2BC;QA1BD,6CAAa,EAAE,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,UAAU;YAEpF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAExB,oCAAoC;YACpC,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACpB,OAAO,EAAE,2BAA2B;gBACpC,QAAQ,EAAE,KAAK;gBACf,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBACZ,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QAG7C,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;YACX,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACpB,OAAO,EAAE,GAAG,CAAC,OAAO;gBACpB,QAAQ,EAAE,IAAI;aAEf,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBACZ,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACH,CAAC;IAED,0EAA0E;IAC1E,0BAAM,GAAN;QACA,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,4BAAQ,GAAR;QACE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACnD,CAAC;IA7DY,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,yFAAgC;;SAEjC,CAAC;+EAO+B,8DAAe,EAAmB,4DAAa;OANnE,SAAS,CA+DrB;IAAD,gBAAC;CAAA;AA/DqB","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"secondary\\\">\\n        <ion-title>Log into your Account</ion-title>\\n      </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n    <ion-list>\\n      <ion-item class=\\\"vert-space\\\">\\n        <h1 class=\\\"center\\\">ToDo App</h1>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Email</ion-label>\\n        <ion-input type=\\\"email\\\" placeholder =\\\"student@email.com\\\" [(ngModel)]=\\\"this.email\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n          <ion-label position=\\\"stacked\\\">Password</ion-label>\\n          <ion-input type=\\\"password\\\" placeholder =\\\"*********\\\" [(ngModel)]=\\\"this.password\\\"></ion-input>\\n        </ion-item>\\n    </ion-list>\\n  <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\" (click)=\\\"login()\\\">Login</ion-button>\\n  <ion-button fill=\\\"clear\\\" color=\\\"secondary\\\" (click)=\\\"signup()\\\">Don't have account? Signup Here</ion-button>\\n  <ion-button  fill=\\\"clear\\\" color=\\\"secondary\\\"  (click)=\\\"resetPwd()\\\">\\n    Forgot Password?\\n  </ion-button>\\n  </ion-content>\\n\"","module.exports = \".vert-space {\\n  margin-bottom: 75px;\\n  margin-top: 75px;\\n  --inner-border-width: 0px; }\\n\\n.center {\\n  width: 100%;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb25pa2FyYWovRGVza3RvcC9zd2VuMzI1L3N3ZW4zMjUtYTEvc3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLHlCQUFxQixFQUFBOztBQUd0QjtFQUNDLFdBQVc7RUFDWCxrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi52ZXJ0LXNwYWNlIHtcbiAgICBtYXJnaW4tYm90dG9tOiA3NXB4O1xuICAgIG1hcmdpbi10b3A6IDc1cHg7XG4gICAgLS1pbm5lci1ib3JkZXItd2lkdGg6IDBweDtcbiAgIH1cbiAgIFxuICAgLmNlbnRlcntcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\n// import firebase\nimport * as firebase from 'firebase' ;\n// import the toast controller for the pop-up message\nimport { ToastController , NavController} from '@ionic/angular' ;\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  email: string;\n  password: string;\n\n\n  constructor(private toastCtrl: ToastController, private navCtrl: NavController) {\n\n    // function to check if a user is currently logged in or not\n    // onAuthStateChanged returns a user if user is not null\n     firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n        // if user is logged in navigate the user to todo page of app\n        this.navCtrl.navigateForward(['/apphome']);\n       //this.navCtrl.navigateForward(['/todo']);\n        } else {\n           // no user is logged in\n\n        }\n\n     });\n   }\n\n  ngOnInit() {\n  }\nlogin() {\nfirebase.auth().signInWithEmailAndPassword(this.email, this.password).then((userObject) => {\n\n  console.log(userObject);\n \n  // navigate the user to My todo page\n  this.toastCtrl.create({\n    message: 'welcome to your Schedular',\n    position: 'top',\n    duration: 1000\n  }).then((toast) => {\n    toast.present();\n  });\n  this.email = '';\n  this.password = '';\n  this.navCtrl.navigateForward(['/apphome']);\n\n\n}).catch((err) => {\n  this.toastCtrl.create({\n    message: err.message,\n    duration: 2000\n\n  }).then((toast) => {\n    toast.present();\n  });\n});\n}\n\n// need navigation controller for going to the signup page from login page\nsignup() {\nthis.navCtrl.navigateForward(['/signup']);\n}\n\nresetPwd() {\n  this.navCtrl.navigateForward(['/resetpassword']);\n}\n\n}\n"],"sourceRoot":""}